include:
  - template: Code-Quality.gitlab-ci.yml

image: gradle:7.3.3-jdk17-alpine

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  script:
    - gradle --build-cache assemble
    - echo $CI_BUILD_PATH
    - echo $CI_PROJECT_DIR
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

code_quality:
  tags:
    - saas-linux-medium-amd64
  stage: test
  allow_failure: false
  variables:
    CODE_QUALITY_IMAGE: "registry.gitlab.com/gitlab-org/ci-cd/codequality:latest"
  artifacts:
    expose_as: 'Code Quality Report'
    paths: [ gl-code-quality-report.json ]

test:
  stage: test
  script:
    - 'gradle test jacocoTestReport'
  artifacts:
    when: always
    expose_as: 'Jacoco Test Report'
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml
    reports:
      junit: build/test-results/test/**/TEST-*.xml

code_quality_html:
  tags:
    - saas-linux-medium-amd64
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    expose_as: 'Code Quality Report HTML'
    paths: [ gl-code-quality-report.html ]

coverage-jdk17:
  stage: deploy
  image: haynes/jacoco2cobertura:latest
  script:
    - mkdir -p builds
    - ls -l build/reports/jacoco/test/jacocoTestReport.xml  # Verify file existence
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - python /opt/cover2cover.py build/reports/jacoco/test/jacocoTestReport.xml src/main/java > builds/cobertura.xml
  needs:
    - test
  dependencies:
    - test
  artifacts:
    expose_as: 'Coverage Report'
    paths: [ builds/cobertura.xml ]
    reports:
      coverage_report:
        coverage_format: cobertura
        path: builds/cobertura.xml
